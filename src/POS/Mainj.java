/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package POS;
import java.util.Date;
import java.util.Scanner;

import javax.swing.JOptionPane;

import java.util.Timer;

/**
 *
 * @author Mo
 */
public class Mainj extends javax.swing.JFrame {

    /**
     * Creates new form Mainj
     */
    public Mainj() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        QueField = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        SimulatorOut = new javax.swing.JTextArea();
        Stopbut = new javax.swing.JButton();
        SimLabel = new javax.swing.JLabel();

        QueField.setColumns(20);
        QueField.setRows(5);
        QueField.setPreferredSize(new java.awt.Dimension(170, 90));
        QueField.setRequestFocusEnabled(false);
        jScrollPane3.setViewportView(QueField);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SimulatorOut.setColumns(20);
        SimulatorOut.setRows(5);
        jScrollPane1.setViewportView(SimulatorOut);

        Stopbut.setText("Stop");
        Stopbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopbutActionPerformed(evt);
            }
        });

        SimLabel.setText("Simulation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(Stopbut, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(SimLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SimLabel)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(Stopbut)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StopbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopbutActionPerformed
         System.exit(0);
    }//GEN-LAST:event_StopbutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException
    {
        Runnable r1,r2;
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() {
                new Mainj().setVisible(true);
            }
        });
      int startchoice= Integer.parseInt(JOptionPane.showInputDialog("Run 1).Simulator 2). User Input"));
       if(startchoice ==1)
        {
            Timer time = new Timer();
            r1= new FirstIteration();
            Thread t1 = new Thread(r1);
            r2= new SecondIteration(r1);
            Thread t2 = new Thread(r2);
            t1.sleep(80000);
            t1.start();
            t2.sleep(80000);
            t2.start();
            
    
        
        }
        CirQueue<Customer> reservQ = new CirQueue<>();
        CirQueue<Customer> waitQ = new CirQueue<>();
        int choice =0;
        int partysize =1;
        int count2 =0;
        int count =0;
        int seat = 0;
        int anotherCust = 0;
        String name =" this guy";
        Customer aCust = new Customer("Mo", 1 + "", "eric123", 2,
	            SeatCategories.SeatCat.WINDOWS, new Date());
   int i =(int)(Math.random()*6)+1;
    for(int j=0;j<i;j++ )
    {
      name = "Customer" + (count+1);
    
    partysize = (int)(Math.random()*6)+1;
    choice = (int)(Math.random()*3)+1;
        if(choice == 1)
       {
aCust = new Customer(name, count + "", name+ "123", 1,
        SeatCategories.SeatCat.BAR_STOOL, new Date());
count++;
count2++;
aCust = new Customer(name, count + "", name+ "123", 1,
        SeatCategories.SeatCat.BAR_STOOL, new Date());
       }
           if(choice == 2)
      {

count++;
count2++;
aCust = new Customer(name, count + "", name+ "123", partysize,
        SeatCategories.SeatCat.WINDOWS, new Date());
      }
     if(choice == 3)
     {

  count++;
  count2++;
  aCust = new Customer(name, count + "", name+ "123", partysize,
	        SeatCategories.SeatCat.BOOTH, new Date());
 }
     
seat=(int)(Math.random()*100)+1;
anotherCust = (int)(Math.random()*100)+1;
if(anotherCust <50)
{
Mainj.SimulatorOut.setText(" A Customer has joined the Reservation Queue");
reservQ.offer(aCust);
waitQ.offer(aCust);
}
}
    int resChoice=0;
  
    	scan2 = new Scanner(System.in);
    	System.out.println("Would you like to join the \n 1). Waiting List\n 2.) Make Reservation");
         resChoice = scan2.nextInt();
         do
         {
    System.out.println("What name do you want to put the reservation under");
    name = scan2.next();
    System.out.println("What is your party size");
    partysize = scan2.nextInt();
    System.out.println("Which type of seat would you like to reserve\n 1). Bar Stool\n 2.) Window\n 3). Booth");
    choice = scan2.nextInt();
    if(choice==1 && partysize >1)
    {
    System.out.println(" That seat type is not compatible with your party size please try again");	
    }
    }while(choice ==1 &&partysize >1);
    if(resChoice ==2)
    {
   
    if(choice == 1 && partysize == 1)
    {
aCust = new Customer(name, count + "", name+ "123", partysize,
     SeatCategories.SeatCat.BAR_STOOL, new Date());
count++;

    }
        if(choice == 2)
   {
aCust = new Customer(name, count + "", name+ "123", partysize,
     SeatCategories.SeatCat.WINDOWS, new Date());
count++;
   }
  if(choice == 3)
  {
aCust = new Customer(name, count + "", name+ "123", partysize,
     SeatCategories.SeatCat.BOOTH, new Date());
count++;
}
  System.out.println(" If you reserve the seat your waiting time will be " + count +  "minutes and your estimated dining period is " +(count *2)+ " minutes Enter 1 to continue else 2 to exit");		
  int cont = scan2.nextInt();
  if(cont==2)
  	System.exit(0);
  if(cont ==1)
  {
  reservQ.offer(aCust);
  System.out.println("Your seat has been reserved and your wait time is "+ count + "minutes and your estimated dining period is " +(count *2)+ "minutes");
  	System.out.println("Do You Want To Cancel Your Reservation?0 1) Yes\n  2)No");
  	int cancel = scan2.nextInt();
  	if(cancel == 1)
  	{
  		reservQ.remove(aCust);
  	}
  	System.out.println(reservQ);
    }
    }
    if(resChoice ==1)
    {
    	if(choice == 1 && partysize == 1)
        {
    aCust = new Customer(name, count + "", name+ "123", partysize,
         SeatCategories.SeatCat.BAR_STOOL, new Date());
    count++;

        }
            if(choice == 2)
       {
    aCust = new Customer(name, count + "", name+ "123", partysize,
         SeatCategories.SeatCat.WINDOWS, new Date());
    count++;
       }
      if(choice == 3)
      {
    aCust = new Customer(name, count + "", name+ "123", partysize,
         SeatCategories.SeatCat.BOOTH, new Date());
    count++;
    }
      waitQ.offer(aCust);
      System.out.println("Your seat has been reserved and your wait time is "+ count2 + "minutes and your estimated dining period is " +(count2 *2)+ "minutes");
      System.out.println("Do You Want To Cancel Your Reservation?0 1) Yes\n  2)No");
    	int cancel = scan2.nextInt();
    	if(cancel == 1)
    	{
    		waitQ.remove(aCust);
    	}
      System.out.println(waitQ);  
    }
    


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea QueField;
    private javax.swing.JLabel SimLabel;
    protected static javax.swing.JTextArea SimulatorOut;
    private javax.swing.JButton Stopbut;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
	private static Scanner scan2;


}
